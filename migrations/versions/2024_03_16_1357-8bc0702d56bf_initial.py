"""initial

Revision ID: 8bc0702d56bf
Revises: 
Create Date: 2024-03-16 13:57:13.685860

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8bc0702d56bf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('USER', 'STAFF', 'MANAGER', 'ADMIN', name='roleENUM').drop(op.get_bind())
    sa.Enum('OPEN', 'PROCESSING', 'CLOSED', name='statusENUM').drop(op.get_bind())
    sa.Enum('STAFF', 'MANAGER', name='assigneeENUM').drop(op.get_bind())
    sa.Enum('EMPLOYEE', 'MANAGER', name='assigneeENUM').create(op.get_bind())
    sa.Enum('OPEN', 'PROCESSING', 'CLOSED', name='statusENUM').create(op.get_bind())
    sa.Enum('USER', 'EMPLOYEE', 'MANAGER', name='roleENUM').create(op.get_bind())
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('role', postgresql.ENUM('USER', 'EMPLOYEE', 'MANAGER', name='roleENUM', create_type=False), nullable=False),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', postgresql.ENUM('OPEN', 'PROCESSING', 'CLOSED', name='statusENUM', create_type=False), nullable=False),
    sa.Column('assignee', postgresql.ENUM('EMPLOYEE', 'MANAGER', name='assigneeENUM', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_request_id'), 'request', ['id'], unique=False)
    op.create_index(op.f('ix_request_title'), 'request', ['title'], unique=False)
    op.create_table('solution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('response_at', sa.DateTime(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solution_id'), 'solution', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('OPEN', 'PROCESSING', 'CLOSED', name='assigneeENUM').create(op.get_bind())
    sa.Enum('OPEN', 'PROCESSING', 'CLOSED', name='statusENUM').create(op.get_bind())
    sa.Enum('USER', 'EMPLOYEE', 'MANAGER', name='roleENUM').create(op.get_bind())
    op.drop_index(op.f('ix_solution_id'), table_name='solution')
    op.drop_table('solution')
    op.drop_index(op.f('ix_request_title'), table_name='request')
    op.drop_index(op.f('ix_request_id'), table_name='request')
    op.drop_table('request')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    sa.Enum('USER', 'EMPLOYEE', 'MANAGER', name='roleENUM').drop(op.get_bind())
    sa.Enum('OPEN', 'PROCESSING', 'CLOSED', name='statusENUM').drop(op.get_bind())
    sa.Enum('EMPLOYEE', 'MANAGER', name='assigneeENUM').drop(op.get_bind())
    # ### end Alembic commands ###
